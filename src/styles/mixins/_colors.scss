// COLOR MIXINS: cyan, light-blue, blue, navy, dark-blue, green, red, gray, orange, indigo, rose

// BG: cyan (soft), dark-blue ((semi)transparent)

// TEXT: white (soft), gray

@mixin white-txt($opacity: "normal") {
  @if $opacity == "normal" {
    color: rgba(255, 255, 255, 0.9);
  }
  @else if $opacity == "soft" {
    color: rgba(255, 255, 255, 0.75);
  }
  @else {
    color: rgba(255, 255, 255, $opacity); // Custom opacity
  }
}

@mixin cyan ($opacity: 1, $type: "bg") {
  @if $type == "bg" {
    background-color: rgba(51, 226, 230, $opacity);
  }
  @else if $type == "text" {
    color: rgba(51, 226, 230, $opacity);
  }
}

@mixin light-blue ($opacity: 1, $type: "bg") {
  @if $type == "bg" {
    background-color: rgba(56, 117, 250, $opacity);
  }
  @else if $type == "text" {
    color: rgba(56, 117, 250, $opacity);
  }
}

@mixin blue ($opacity: 1, $type: "bg", $state: "normal") {
  @if $type == "bg" {
    @if $state == "normal" {
      background-color: rgba(36, 65, 189, $opacity);
    }
    @else {
      background-color: rgba(45, 90, 216, $opacity);
    }
  }
  @else if $type == "text" {
    @if $state == "normal" {
      color: rgba(36, 65, 189, $opacity);
    }
    @else {
      color: rgba(45, 90, 216, $opacity);
    }
  }
}

@mixin navy ($opacity: 1, $type: "bg") {
  @if $type == "bg" {
    background-color: rgba(22, 30, 95, $opacity);
  }
  @else if $type == "text" {
    color: rgba(22, 30, 95, $opacity);
  }
}

@mixin dark-blue ($opacity: 1, $type: "bg") {
  @if $type == "bg" {
    background-color: rgba(1, 0, 32, $opacity);
  }
  @else if $type == "text" {
    color: rgba(1, 0, 32, $opacity);
  }
}

@mixin green ($opacity: 1, $type: "bg") {
  @if $type == "bg" {
    background-color: rgba(0, 185, 55, $opacity);
  }
  @else if $type == "text" {
    color: rgba(0, 185, 55, $opacity);
  }
}

@mixin red ($opacity: 1, $type: "bg") {
  @if $type == "bg" {
    background-color: rgba(255, 60, 64, $opacity);
  }
  @else if $type == "text" {
    color: rgba(255, 60, 64, $opacity);
  }
}

@mixin gray ($opacity: 1, $type: "bg") {
  @if $type == "bg" {
    background-color: rgba(150, 150, 150, $opacity);
  }
  @else if $type == "text" {
    color: rgba(150, 150, 150, $opacity);
  }
}

@mixin orange ($opacity: 1, $type: "bg", $state: "normal") {
  @if $type == "bg" {
    @if $state == "normal" {
      background-color: rgba(255, 140, 0, $opacity);
    }
    @else {
      background-color: rgba(255, 165, 40, $opacity);
    }
  }
  @else if $type == "text" {
    @if $state == "normal" {
      color: rgba(255, 140, 0, $opacity);
    }
    @else if $state == "bright" {
      color: rgba(255, 165, 40, $opacity);
    }
  }
}

@mixin indigo ($opacity: 1, $type: "bg", $state: "normal") {
  @if $type == "bg" {
    @if $state == "normal" {
      background-color: rgba(95, 80, 160, $opacity);
    }
    @else {
      background-color: rgba(120, 100, 190, $opacity);
    }
  }
  @else if $type == "text" {
    @if $state == "normal" {
      color: rgba(95, 80, 160, $opacity);
    }
    @else {
      color: rgba(120, 100, 190, $opacity);
    }
  }
}

@mixin rose ($opacity: 1, $type: "bg", $state: "normal") {
  @if $type == "bg" {
    @if $state == "normal" {
      background-color: rgba(200, 140, 140, $opacity);
    }
    @else {
      background-color: rgba(230, 175, 175, $opacity);
    }
  }
  @else if $type == "text" {
    @if $state == "normal" {
      color: rgba(200, 140, 140, $opacity);
    }
    @else {
      color: rgba(230, 175, 175, $opacity);
    }
  }
}

// Background colors

:global(.cyan-soft-bg) {
  @include cyan(0.75);
}

:global(.cyan-bg) {
  @include cyan;
}

:global(.dark-blue-bg) {
  @include dark-blue;
}

:global(.dark-semi-transparent-bg) {
  @include dark-blue(0.75);
}

:global(.dark-transparent-bg) {
  @include dark-blue(0.5);
}

// Text colors

:global(.white-txt) {
  @include white-txt;
}

:global(.white-soft-txt) {
  @include white-txt(soft);
}

:global(.green-txt) {
  @include green(1, text);
}

:global(.red-txt) {
  @include red(1, text);
}

// General definitions

:global(:where(h1)) {
  @include cyan(1, text);
}

:global(:where(h2)) {
  @include cyan(0.75, text);
}

:global(:where(h4, h5)) {
  @include white-txt(soft);
}

:global(:where(.validation)) {
  @include red(1, text);
}
